{
  "version": 3,
  "file": "storage.js",
  "sourceRoot": "../src/",
  "sources": [
    "storage.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\r\n\r\nsettings = require './settings'\r\nasync = require 'async'\r\ncrypto = require 'crypto'\r\njsonStream = require 'JSONStream'\r\nes = require 'event-stream'\r\nzlib = require 'zlib'\r\n\r\n\r\nmodule.exports = ->\r\n  algorithm = settings.ENCRYPTION_ALGORITHM or 'aes-256-ctr'\r\n  doencrypt = !settings.DO_NOT_ENCRYPT\r\n  dozip = !settings.DO_NOT_ENCRYPT\r\n  s3 = require('./s3')()\r\n  local = require('./local')()\r\n  devices = []\r\n  if settings.LOCAL_STORAGE\r\n    devices.push local\r\n  if settings.AWS_OK\r\n    devices.push s3\r\n  checkDataDir: ->\r\n    if settings.LOCAL_STORAGE\r\n      local.checkDataDir()\r\n  keys: (from, prefix, cb) ->\r\n    if not devices.length\r\n      cb? 'no storage', null\r\n    else\r\n      calledBack = false\r\n      async.each devices, (device, callback) ->\r\n        device.keys from, prefix, (e, r) ->\r\n          if not e or calledBack\r\n            calledBack = true\r\n            cb? e, r\r\n          callback()\r\n      , ->\r\n        if not calledBack\r\n          cb? 'nothing found', null\r\n  del: (key, cb) ->\r\n    async.each devices, (device, callback) ->\r\n      device.del key, ->\r\n        callback()\r\n    , ->\r\n      cb?()\r\n  put: (key, o, cb, notCritical, writeStream) ->\r\n    if not devices.length or notCritical\r\n      cb? null, null\r\n    else\r\n      if key.indexOf(':node:') isnt -1\r\n        key = \"#{key}\"\r\n      jsStringify = new jsonStream.stringify()\r\n      encrypt = crypto.createCipher algorithm, settings.ENCRYPTION_KEY or settings.SESSION_SECRET or '5random7493nonsens!e'\r\n      gzip = zlib.createGzip()\r\n      st = null\r\n      ws = null\r\n      if dozip\r\n        st = jsStringify.pipe gzip\r\n      if doencrypt\r\n        if st\r\n          st = st.pipe encrypt\r\n        else\r\n          st = jsStringify.pipe encrypt\r\n      if not st\r\n        st = jsStringify\r\n      if writeStream\r\n        st = st.pipe writeStream\r\n      else\r\n        for device in devices\r\n          writeStream = device.getWriteStream(key)\r\n          st = st.pipe writeStream\r\n      jsStringify.write o, ->\r\n        jsStringify.flush()\r\n      jsStringify.end()\r\n      st.on 'close', ->\r\n        cb? null, null\r\n      st.on 'error', (er) ->\r\n      writeStream.on 'error', (er) ->\r\n      writeStream.on 'uploaded', (res) ->\r\n        cb? null, null\r\n      gzip.on 'error', (er) ->\r\n      encrypt.on 'error', (er) ->\r\n      #jsStringify.end()\r\n  get: (key, cb, reader) ->\r\n    if not devices\r\n      cb? 'no devices', null\r\n      done?()\r\n    else\r\n      jsParse = new jsonStream.parse '*'\r\n      decrypt = crypto.createDecipher algorithm, settings.ENCRYPTION_KEY or settings.SESSION_SECRET or '5random7493nonsens!e'\r\n      gunzip = zlib.createGunzip()\r\n      finished = false\r\n      async.eachSeries devices, (device, callback) ->\r\n        if not finished\r\n          calledBack = false\r\n          if not reader\r\n            reader = device.getReadStream key\r\n          st = reader\r\n          if doencrypt\r\n            st = st.pipe decrypt\r\n          if dozip\r\n            st = st.pipe gunzip\r\n          st.pipe jsParse\r\n          .pipe es.mapSync (data) ->\r\n            finished = true\r\n            calledBack = true\r\n            cb? null, data\r\n            done?()\r\n            callback()\r\n          reader.on 'error', (e) ->\r\n            if not calledBack\r\n              calledBack = true\r\n              callback()\r\n          st.on 'error', (e) ->\r\n            if not calledBack\r\n              calledBack = true\r\n              finished = true\r\n              cb? 'encrypt error', null\r\n              callback()\r\n          jsParse.on 'error', (e) ->\r\n            console.log 'Error parsing database - have you changed your encryption key or turned encryption on or off?  If so, update your database using ndx-framework.'\r\n          st.on 'end', ->\r\n            if not calledBack\r\n              calledBack = true\r\n              callback()\r\n        else\r\n          callback()\r\n      , ->\r\n        if not finished\r\n          cb? 'nothing found', null\r\n          done?()\r\n  putOld: (key, o, cb, notCritical) ->\r\n    if settings.LOCAL_STORAGE\r\n      if not notCritical\r\n        local.put key, o, (e, r) ->\r\n          if settings.AWS_OK\r\n            s3.put key, o, cb\r\n          else\r\n            cb? e, r\r\n    else if settings.AWS_OK and (not notCritical)\r\n      s3.put key, o, cb\r\n    else\r\n      cb? null, null\r\n  getOld: (key, cb) ->\r\n    if not settings.PREFER_LOCAL\r\n      if settings.LOCAL_STORAGE\r\n        local.get key, (e, r) ->\r\n          if e and settings.AWS_OK\r\n            s3.get key, cb\r\n          else\r\n            cb e, r\r\n      else if settings.AWS_OK\r\n        s3.get key, cb\r\n      else \r\n        cb 'no storage', null\r\n    else\r\n      if settings.AWS_OK\r\n        s3.get key, (e, r) ->\r\n          if e and settings.LOCAL_STORAGE\r\n            local.get key, cb\r\n          else\r\n            cb e, r\r\n      else if settings.LOCAL_STORAGE\r\n        local.get key, cb\r\n      else\r\n        cb 'no storage', null"
  ]
}